// Code generated by protoc-gen-go.
// source: books.proto
// DO NOT EDIT!

/*
Package books is a generated protocol buffer package.

It is generated from these files:
	books.proto

It has these top-level messages:
	Book
	Shelf
	ListShelvesRequest
	ListShelvesResponse
	ListBooksRequest
	ListBooksResponse
	GetBookRequest
	CreateBookRequest
	CreateShelfRequest
	UpdateBookRequest
	DeleteShelfRequest
	DeleteBookRequest
*/
package books

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "google.golang.org/genproto/protobuf/field_mask"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Book struct {
	// Resource name of the book. It must have the format of "shelves/*/books/*".
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// ... other properties
	Text string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *Book) Reset()                    { *m = Book{} }
func (m *Book) String() string            { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()               {}
func (*Book) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Book) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Book) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Shelf struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Shelf) Reset()                    { *m = Shelf{} }
func (m *Shelf) String() string            { return proto.CompactTextString(m) }
func (*Shelf) ProtoMessage()               {}
func (*Shelf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Shelf) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListShelvesRequest struct {
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListShelvesRequest) Reset()                    { *m = ListShelvesRequest{} }
func (m *ListShelvesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListShelvesRequest) ProtoMessage()               {}
func (*ListShelvesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListShelvesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListShelvesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListShelvesResponse struct {
	Shelves       []*Shelf `protobuf:"bytes,1,rep,name=shelves" json:"shelves,omitempty"`
	NextPageToken string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListShelvesResponse) Reset()                    { *m = ListShelvesResponse{} }
func (m *ListShelvesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListShelvesResponse) ProtoMessage()               {}
func (*ListShelvesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListShelvesResponse) GetShelves() []*Shelf {
	if m != nil {
		return m.Shelves
	}
	return nil
}

func (m *ListShelvesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type ListBooksRequest struct {
	// The parent resource name, for example, "shelves/shelf1".
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListBooksRequest) Reset()                    { *m = ListBooksRequest{} }
func (m *ListBooksRequest) String() string            { return proto.CompactTextString(m) }
func (*ListBooksRequest) ProtoMessage()               {}
func (*ListBooksRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListBooksRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListBooksRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListBooksRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListBooksResponse struct {
	// The field name should match the noun "books" in the method name. There
	// will be a maximum number of items returned based on the page_size field
	// in the request.
	Books []*Book `protobuf:"bytes,1,rep,name=books" json:"books,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListBooksResponse) Reset()                    { *m = ListBooksResponse{} }
func (m *ListBooksResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBooksResponse) ProtoMessage()               {}
func (*ListBooksResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListBooksResponse) GetBooks() []*Book {
	if m != nil {
		return m.Books
	}
	return nil
}

func (m *ListBooksResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetBookRequest struct {
	// The field will contain name of the resource requested, for example:
	// "shelves/shelf1/books/book2"
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetBookRequest) Reset()                    { *m = GetBookRequest{} }
func (m *GetBookRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBookRequest) ProtoMessage()               {}
func (*GetBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetBookRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateBookRequest struct {
	// The parent resource name where the book is to be created.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// The book id to use for this book.
	BookId string `protobuf:"bytes,3,opt,name=book_id,json=bookId" json:"book_id,omitempty"`
	// The book resource to create.
	// The field name should match the Noun in the method name.
	Book *Book `protobuf:"bytes,2,opt,name=book" json:"book,omitempty"`
}

func (m *CreateBookRequest) Reset()                    { *m = CreateBookRequest{} }
func (m *CreateBookRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBookRequest) ProtoMessage()               {}
func (*CreateBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateBookRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateBookRequest) GetBookId() string {
	if m != nil {
		return m.BookId
	}
	return ""
}

func (m *CreateBookRequest) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

type CreateShelfRequest struct {
	Shelf *Shelf `protobuf:"bytes,1,opt,name=shelf" json:"shelf,omitempty"`
}

func (m *CreateShelfRequest) Reset()                    { *m = CreateShelfRequest{} }
func (m *CreateShelfRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateShelfRequest) ProtoMessage()               {}
func (*CreateShelfRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateShelfRequest) GetShelf() *Shelf {
	if m != nil {
		return m.Shelf
	}
	return nil
}

type UpdateBookRequest struct {
	// The book resource which replaces the resource on the server.
	Book *Book `protobuf:"bytes,1,opt,name=book" json:"book,omitempty"`
	// The update mask applies to the resource.
	UpdateMask *google_protobuf1.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (m *UpdateBookRequest) Reset()                    { *m = UpdateBookRequest{} }
func (m *UpdateBookRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateBookRequest) ProtoMessage()               {}
func (*UpdateBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateBookRequest) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

func (m *UpdateBookRequest) GetUpdateMask() *google_protobuf1.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteShelfRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteShelfRequest) Reset()                    { *m = DeleteShelfRequest{} }
func (m *DeleteShelfRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteShelfRequest) ProtoMessage()               {}
func (*DeleteShelfRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteShelfRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteBookRequest struct {
	// The resource name of the book to be deleted, for example:
	// "shelves/shelf1/books/book2"
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteBookRequest) Reset()                    { *m = DeleteBookRequest{} }
func (m *DeleteBookRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteBookRequest) ProtoMessage()               {}
func (*DeleteBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeleteBookRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Book)(nil), "Book")
	proto.RegisterType((*Shelf)(nil), "Shelf")
	proto.RegisterType((*ListShelvesRequest)(nil), "ListShelvesRequest")
	proto.RegisterType((*ListShelvesResponse)(nil), "ListShelvesResponse")
	proto.RegisterType((*ListBooksRequest)(nil), "ListBooksRequest")
	proto.RegisterType((*ListBooksResponse)(nil), "ListBooksResponse")
	proto.RegisterType((*GetBookRequest)(nil), "GetBookRequest")
	proto.RegisterType((*CreateBookRequest)(nil), "CreateBookRequest")
	proto.RegisterType((*CreateShelfRequest)(nil), "CreateShelfRequest")
	proto.RegisterType((*UpdateBookRequest)(nil), "UpdateBookRequest")
	proto.RegisterType((*DeleteShelfRequest)(nil), "DeleteShelfRequest")
	proto.RegisterType((*DeleteBookRequest)(nil), "DeleteBookRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LibraryService service

type LibraryServiceClient interface {
	ListShelves(ctx context.Context, in *ListShelvesRequest, opts ...grpc.CallOption) (*ListShelvesResponse, error)
	ListBooks(ctx context.Context, in *ListBooksRequest, opts ...grpc.CallOption) (*ListBooksResponse, error)
	GetBook(ctx context.Context, in *GetBookRequest, opts ...grpc.CallOption) (*Book, error)
	CreateBook(ctx context.Context, in *CreateBookRequest, opts ...grpc.CallOption) (*Book, error)
	CreateShelf(ctx context.Context, in *CreateShelfRequest, opts ...grpc.CallOption) (*Shelf, error)
	UpdateBook(ctx context.Context, in *UpdateBookRequest, opts ...grpc.CallOption) (*Book, error)
	DeleteShelf(ctx context.Context, in *DeleteShelfRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	DeleteBook(ctx context.Context, in *DeleteBookRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type libraryServiceClient struct {
	cc *grpc.ClientConn
}

func NewLibraryServiceClient(cc *grpc.ClientConn) LibraryServiceClient {
	return &libraryServiceClient{cc}
}

func (c *libraryServiceClient) ListShelves(ctx context.Context, in *ListShelvesRequest, opts ...grpc.CallOption) (*ListShelvesResponse, error) {
	out := new(ListShelvesResponse)
	err := grpc.Invoke(ctx, "/LibraryService/ListShelves", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryServiceClient) ListBooks(ctx context.Context, in *ListBooksRequest, opts ...grpc.CallOption) (*ListBooksResponse, error) {
	out := new(ListBooksResponse)
	err := grpc.Invoke(ctx, "/LibraryService/ListBooks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryServiceClient) GetBook(ctx context.Context, in *GetBookRequest, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := grpc.Invoke(ctx, "/LibraryService/GetBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryServiceClient) CreateBook(ctx context.Context, in *CreateBookRequest, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := grpc.Invoke(ctx, "/LibraryService/CreateBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryServiceClient) CreateShelf(ctx context.Context, in *CreateShelfRequest, opts ...grpc.CallOption) (*Shelf, error) {
	out := new(Shelf)
	err := grpc.Invoke(ctx, "/LibraryService/CreateShelf", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryServiceClient) UpdateBook(ctx context.Context, in *UpdateBookRequest, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := grpc.Invoke(ctx, "/LibraryService/UpdateBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryServiceClient) DeleteShelf(ctx context.Context, in *DeleteShelfRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/LibraryService/DeleteShelf", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryServiceClient) DeleteBook(ctx context.Context, in *DeleteBookRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/LibraryService/DeleteBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LibraryService service

type LibraryServiceServer interface {
	ListShelves(context.Context, *ListShelvesRequest) (*ListShelvesResponse, error)
	ListBooks(context.Context, *ListBooksRequest) (*ListBooksResponse, error)
	GetBook(context.Context, *GetBookRequest) (*Book, error)
	CreateBook(context.Context, *CreateBookRequest) (*Book, error)
	CreateShelf(context.Context, *CreateShelfRequest) (*Shelf, error)
	UpdateBook(context.Context, *UpdateBookRequest) (*Book, error)
	DeleteShelf(context.Context, *DeleteShelfRequest) (*google_protobuf.Empty, error)
	DeleteBook(context.Context, *DeleteBookRequest) (*google_protobuf.Empty, error)
}

func RegisterLibraryServiceServer(s *grpc.Server, srv LibraryServiceServer) {
	s.RegisterService(&_LibraryService_serviceDesc, srv)
}

func _LibraryService_ListShelves_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListShelvesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).ListShelves(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LibraryService/ListShelves",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).ListShelves(ctx, req.(*ListShelvesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryService_ListBooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBooksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).ListBooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LibraryService/ListBooks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).ListBooks(ctx, req.(*ListBooksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryService_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LibraryService/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).GetBook(ctx, req.(*GetBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryService_CreateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).CreateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LibraryService/CreateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).CreateBook(ctx, req.(*CreateBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryService_CreateShelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).CreateShelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LibraryService/CreateShelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).CreateShelf(ctx, req.(*CreateShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryService_UpdateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).UpdateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LibraryService/UpdateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).UpdateBook(ctx, req.(*UpdateBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryService_DeleteShelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).DeleteShelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LibraryService/DeleteShelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).DeleteShelf(ctx, req.(*DeleteShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryService_DeleteBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).DeleteBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/LibraryService/DeleteBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).DeleteBook(ctx, req.(*DeleteBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LibraryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "LibraryService",
	HandlerType: (*LibraryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListShelves",
			Handler:    _LibraryService_ListShelves_Handler,
		},
		{
			MethodName: "ListBooks",
			Handler:    _LibraryService_ListBooks_Handler,
		},
		{
			MethodName: "GetBook",
			Handler:    _LibraryService_GetBook_Handler,
		},
		{
			MethodName: "CreateBook",
			Handler:    _LibraryService_CreateBook_Handler,
		},
		{
			MethodName: "CreateShelf",
			Handler:    _LibraryService_CreateShelf_Handler,
		},
		{
			MethodName: "UpdateBook",
			Handler:    _LibraryService_UpdateBook_Handler,
		},
		{
			MethodName: "DeleteShelf",
			Handler:    _LibraryService_DeleteShelf_Handler,
		},
		{
			MethodName: "DeleteBook",
			Handler:    _LibraryService_DeleteBook_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "books.proto",
}

func init() { proto.RegisterFile("books.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x95, 0xb6, 0x4e, 0xe9, 0x58, 0x6d, 0xc9, 0xa4, 0x2a, 0xc5, 0x09, 0x28, 0xac, 0x2a,
	0x28, 0x39, 0xac, 0x45, 0xb9, 0x15, 0x71, 0xe1, 0xa3, 0x15, 0x52, 0x2b, 0x55, 0x0e, 0x48, 0x39,
	0x61, 0x39, 0x64, 0x53, 0x2c, 0xa7, 0x5e, 0x63, 0x6f, 0xab, 0xb6, 0xa8, 0x17, 0x5e, 0x81, 0x47,
	0xe1, 0x51, 0x78, 0x05, 0x1e, 0x04, 0xed, 0x87, 0x13, 0xd7, 0x4e, 0x02, 0xb7, 0xf5, 0xec, 0xe4,
	0x3f, 0xff, 0x99, 0xf9, 0x6d, 0xc0, 0x1e, 0x70, 0x1e, 0x65, 0x34, 0x49, 0xb9, 0xe0, 0x4e, 0xeb,
	0x8c, 0xf3, 0xb3, 0x31, 0x73, 0xd5, 0xd7, 0xe0, 0x62, 0xe4, 0xb2, 0xf3, 0x44, 0x5c, 0x9b, 0xcb,
	0x4e, 0xf9, 0x72, 0x14, 0xb2, 0xf1, 0xd0, 0x3f, 0x0f, 0xb2, 0xc8, 0x64, 0xb4, 0x4d, 0x46, 0x90,
	0x84, 0x6e, 0x10, 0xc7, 0x5c, 0x04, 0x22, 0xe4, 0xb1, 0x11, 0x27, 0x14, 0x56, 0xde, 0x70, 0x1e,
	0x21, 0xc2, 0x4a, 0x1c, 0x9c, 0xb3, 0x9d, 0x5a, 0xa7, 0xb6, 0xb7, 0xe6, 0xa9, 0xb3, 0x8c, 0x09,
	0x76, 0x25, 0x76, 0x96, 0x74, 0x4c, 0x9e, 0x49, 0x0b, 0xac, 0xde, 0x57, 0x36, 0x1e, 0xcd, 0xfa,
	0x01, 0x39, 0x05, 0x3c, 0x0e, 0x33, 0x21, 0x13, 0x2e, 0x59, 0xe6, 0xb1, 0x6f, 0x17, 0x2c, 0x13,
	0xd8, 0x82, 0xb5, 0x24, 0x38, 0x63, 0x7e, 0x16, 0xde, 0xe8, 0x74, 0xcb, 0xbb, 0x27, 0x03, 0xbd,
	0xf0, 0x86, 0xe1, 0x23, 0x00, 0x75, 0x29, 0x78, 0xc4, 0x62, 0x53, 0x49, 0xa5, 0x7f, 0x94, 0x01,
	0xe2, 0x43, 0xf3, 0x8e, 0x62, 0x96, 0xf0, 0x38, 0x63, 0xd8, 0x81, 0xd5, 0x4c, 0x87, 0x76, 0x6a,
	0x9d, 0xe5, 0x3d, 0x7b, 0xbf, 0x4e, 0x95, 0x2b, 0x2f, 0x0f, 0xe3, 0x53, 0xd8, 0x8c, 0xd9, 0x95,
	0xf0, 0x2b, 0xe2, 0xeb, 0x32, 0x7c, 0x3a, 0x29, 0x30, 0x82, 0xfb, 0xb2, 0x80, 0x9c, 0xc1, 0xc4,
	0xf0, 0x36, 0xd4, 0x93, 0x20, 0x65, 0xb1, 0x30, 0xcd, 0x99, 0xaf, 0xbb, 0x8d, 0x2c, 0x2d, 0x6c,
	0x64, 0xb9, 0xdc, 0x48, 0x1f, 0x1a, 0x85, 0x3a, 0xa6, 0x8d, 0x16, 0x58, 0x6a, 0xd1, 0xa6, 0x09,
	0x8b, 0xca, 0x6b, 0x4f, 0xc7, 0xfe, 0xbb, 0x83, 0x5d, 0xd8, 0x38, 0x62, 0x4a, 0x38, 0xf7, 0x3f,
	0x6b, 0x35, 0x3e, 0x34, 0xde, 0xa6, 0x2c, 0x10, 0xac, 0x98, 0x38, 0xaf, 0xd1, 0x07, 0xb0, 0x2a,
	0x3d, 0xf8, 0xe1, 0xd0, 0x34, 0x52, 0x97, 0x9f, 0x1f, 0x86, 0xf8, 0x10, 0x56, 0xe4, 0x49, 0x19,
	0x99, 0xf8, 0x55, 0x21, 0xb2, 0x0f, 0xa8, 0x0b, 0xe8, 0x45, 0x98, 0x0a, 0x6d, 0xb0, 0xe4, 0x46,
	0x46, 0xaa, 0xc0, 0x74, 0x4d, 0x3a, 0x48, 0x22, 0x68, 0x7c, 0x4a, 0x86, 0x25, 0x53, 0x79, 0x8d,
	0x5a, 0xa5, 0x06, 0xbe, 0x02, 0xfb, 0x42, 0xe5, 0x2b, 0xbe, 0x8d, 0x0b, 0x87, 0x6a, 0xc0, 0x69,
	0xfe, 0x04, 0xe8, 0xa1, 0x7c, 0x02, 0x27, 0x41, 0x16, 0x79, 0xa0, 0xd3, 0xe5, 0x99, 0xec, 0x01,
	0xbe, 0x63, 0x63, 0x56, 0x32, 0x38, 0x6b, 0x56, 0xcf, 0xa0, 0xa1, 0x33, 0xff, 0x31, 0xd4, 0xfd,
	0x5f, 0x16, 0x6c, 0x1c, 0x87, 0x83, 0x34, 0x48, 0xaf, 0x7b, 0x2c, 0xbd, 0x0c, 0xbf, 0x30, 0x3c,
	0x01, 0xbb, 0x00, 0x2c, 0x36, 0x69, 0xf5, 0x41, 0x38, 0x5b, 0x74, 0x06, 0xd3, 0xa4, 0xf9, 0xe3,
	0xf7, 0x9f, 0x9f, 0x4b, 0xeb, 0x68, 0xbb, 0x97, 0x2f, 0xdc, 0x1c, 0xe3, 0x3e, 0xac, 0x4d, 0xb0,
	0xc1, 0x06, 0x2d, 0xa3, 0xea, 0x20, 0xad, 0x50, 0x45, 0x76, 0x95, 0xd0, 0x63, 0x6c, 0x4b, 0xa1,
	0xef, 0x7a, 0xa5, 0xaf, 0x8d, 0xa0, 0xdb, 0xbd, 0x75, 0x35, 0x5e, 0x47, 0xb0, 0x6a, 0xb0, 0xc1,
	0x4d, 0x7a, 0x17, 0x20, 0x47, 0x0f, 0xbd, 0x24, 0x24, 0x3b, 0x9e, 0xca, 0x68, 0x15, 0xb7, 0x7b,
	0x8b, 0x3d, 0x80, 0x29, 0x59, 0x88, 0xb4, 0x82, 0x59, 0x2e, 0xd7, 0x55, 0x72, 0xbb, 0x64, 0xa1,
	0xaf, 0x03, 0xbd, 0xe9, 0x43, 0xb0, 0x0b, 0x34, 0x61, 0x93, 0x56, 0xd9, 0x72, 0x0c, 0x4c, 0xc4,
	0x51, 0xba, 0x5b, 0xa4, 0x38, 0xb8, 0x03, 0x4d, 0x18, 0xf6, 0x01, 0xa6, 0x84, 0x21, 0xd2, 0x0a,
	0x6e, 0xb9, 0x39, 0x57, 0x89, 0x3c, 0x77, 0x9e, 0x28, 0x73, 0xd2, 0x03, 0x9d, 0xd3, 0xb0, 0x71,
	0xd8, 0x07, 0xbb, 0x80, 0x13, 0x36, 0x69, 0x15, 0x2e, 0x67, 0xbb, 0x82, 0xe6, 0x7b, 0xf9, 0xd7,
	0x4d, 0xda, 0xaa, 0xd8, 0x76, 0x77, 0x6b, 0xc6, 0x60, 0x6f, 0xf1, 0x33, 0xc0, 0x14, 0x3f, 0x44,
	0x5a, 0x61, 0x71, 0xae, 0xae, 0x59, 0x58, 0x77, 0xe1, 0xc2, 0x06, 0x75, 0xf5, 0xab, 0x97, 0x7f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x3d, 0x8c, 0x7c, 0x65, 0x06, 0x00, 0x00,
}
